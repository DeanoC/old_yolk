// single byte instructions
DECLARE_BYTECODE(End, 					0x00)
DECLARE_BYTECODE(NextFrame, 			0x04)
DECLARE_BYTECODE(PrevFrame, 			0x05)
DECLARE_BYTECODE(Play, 					0x06)
DECLARE_BYTECODE(Stop, 					0x07)
DECLARE_BYTECODE(ToggleQuality,		0x08)
DECLARE_BYTECODE(StopSounds,			0x09)

DECLARE_BYTECODE(Pop,					0x17)
DECLARE_BYTECODE(Add,					0x0A)
DECLARE_BYTECODE(Subtract,				0x0B)
DECLARE_BYTECODE(Multiply,				0x0C)
DECLARE_BYTECODE(Divide,				0x0D)
DECLARE_BYTECODE(Equals,				0x0E)
DECLARE_BYTECODE(Less,					0x0F)
DECLARE_BYTECODE(And,					0x10)
DECLARE_BYTECODE(Or,						0x11)
DECLARE_BYTECODE(Not,					0x12)
DECLARE_BYTECODE(StringEquals,		0x13)
DECLARE_BYTECODE(StringLength,		0x14)
DECLARE_BYTECODE(StringExtract,		0x15)
DECLARE_BYTECODE(StringAdd,			0x21)
DECLARE_BYTECODE(StringLess,			0x29)
DECLARE_BYTECODE(MBStringLength,		0x31)
DECLARE_BYTECODE(MBStringExtract,	0x35)
DECLARE_BYTECODE(ToInteger,			0x18)
DECLARE_BYTECODE(GetVariable,			0x1C)
DECLARE_BYTECODE(SetVariable,			0x1D)
DECLARE_BYTECODE(SetTarget2,			0x20)

DECLARE_BYTECODE(GetProperty,			0x22)
DECLARE_BYTECODE(SetProperty,			0x23)
DECLARE_BYTECODE(DupClip,				0x24)
DECLARE_BYTECODE(RemoveClip,			0x25)
DECLARE_BYTECODE(Trace,					0x26)
DECLARE_BYTECODE(StartDragMovie,		0x27)
DECLARE_BYTECODE(StopDragMovie,		0x28)
DECLARE_BYTECODE(Random,				0x30)
DECLARE_BYTECODE(Ord,					0x32)
DECLARE_BYTECODE(Chr,					0x33)
DECLARE_BYTECODE(GetTimer,				0x34)
DECLARE_BYTECODE(MBOrd,					0x36)
DECLARE_BYTECODE(MBChr,					0x37)
DECLARE_BYTECODE(Delete,				0x3B)
DECLARE_BYTECODE(DefineLocal,			0x3C)
DECLARE_BYTECODE(CallFunction,		0x3D)
DECLARE_BYTECODE(Return,				0x3E)
DECLARE_BYTECODE(Modulo,				0x3F)
DECLARE_BYTECODE(NewObject,			0x40)
DECLARE_BYTECODE(DefineLocal2,		0x41)
DECLARE_BYTECODE(InitArray,			0x42)
DECLARE_BYTECODE(InitObject,			0x43)
DECLARE_BYTECODE(TypeOf,				0x44)
DECLARE_BYTECODE(Enumerate,			0x46)
DECLARE_BYTECODE(Add2,					0x47)
DECLARE_BYTECODE(Less2,					0x48)
DECLARE_BYTECODE(Equal2,				0x49)
DECLARE_BYTECODE(ToNumber,				0x4A)
DECLARE_BYTECODE(ToString,				0x4B)
DECLARE_BYTECODE(PushDuplicate,		0x4C)
DECLARE_BYTECODE(SwapStack,			0x4D)
DECLARE_BYTECODE(GetMember,			0x4E)
DECLARE_BYTECODE(SetMember,			0x4F)
DECLARE_BYTECODE(Increment,			0x50)
DECLARE_BYTECODE(Decrement,			0x51)
DECLARE_BYTECODE(CallMethod,			0x52)
DECLARE_BYTECODE(NewMethod,			0x53)
DECLARE_BYTECODE(BitwiseAnd,			0x60)
DECLARE_BYTECODE(BitwiseEor,			0x61)
DECLARE_BYTECODE(BitwiseXor,			0x62)
DECLARE_BYTECODE(ShiftLeft,			0x63)
DECLARE_BYTECODE(ShiftRight,			0x64)
DECLARE_BYTECODE(ShiftRight2,			0x65)

// 'long' instruction (have addition parameters following the instruciton)
DECLARE_BYTECODE(GotoFrame,			0x81) 
DECLARE_BYTECODE(GetURL,				0x83)
DECLARE_BYTECODE(SetTarget,			0x8B)
DECLARE_BYTECODE(GotoLabel,			0x8C)

DECLARE_BYTECODE(PushData,				0x96)
DECLARE_BYTECODE(Jump,					0x99)
DECLARE_BYTECODE(If,						0x9D)
DECLARE_BYTECODE(StoreRegister,		0x87)
DECLARE_BYTECODE(ConstantPool,		0x88)
DECLARE_BYTECODE(WaitForFrame,		0x8A)
DECLARE_BYTECODE(WaitForFrameExpression, 0x8D)
DECLARE_BYTECODE(With,					0x94)
DECLARE_BYTECODE(GetURL2,				0x9A)
DECLARE_BYTECODE(DefineFunction,		0x9B)
DECLARE_BYTECODE(CallFrame,			0x9E)
DECLARE_BYTECODE(GotoFrame2,			0x9F)
// v6 actions
DECLARE_BYTECODE(ACTION_INSTANCEOF, 0x54)
DECLARE_BYTECODE(ACTION_ENUMERATE2, 0x55)
DECLARE_BYTECODE(ACTION_STRICTEQ, 	0x66)
DECLARE_BYTECODE(Greater, 0x67)
DECLARE_BYTECODE(ACTION_STRINGGREATER, 0x68)
// v7 actions
DECLARE_BYTECODE(ACTION_DEFINEFUNCTION2, 0x8E)
DECLARE_BYTECODE(ACTION_EXTENDS, 	0x69)
DECLARE_BYTECODE(ACTION_CAST, 		0x2B)
DECLARE_BYTECODE(ACTION_IMPLEMENTS, 0x2C)
DECLARE_BYTECODE(ACTION_TRY, 			0x8F)
DECLARE_BYTECODE(ACTION_THROW, 		0x2A)
