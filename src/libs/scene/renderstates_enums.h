#ifndef YOLK_SCENE_RENDER_STATES_ENUMS_H_
#define YOLK_SCENE_RENDER_STATES_ENUMS_H_ 1
namespace Scene {
	enum BLEND_MODE {
		BM_ZERO,
		BM_ONE,
		BM_SRC_COLOUR,
		BM_INV_SRC_COLOUR,
		BM_SRC_ALPHA,
		BM_INV_SRC_ALPHA,
		BM_DEST_ALPHA,
		BM_INV_DEST_ALPHA,
		BM_DEST_COLOUR,
		BM_INV_DEST_COLOUR,
		BM_SRC_ALPHA_SAT,
		BM_BLEND_FACTOR,
		BM_INV_BLEND_FACTOR,
		BM_SRC1_COLOUR,
		BM_INV_SRC1_COLOUR,
		BM_SRC1_ALPHA,
		BM_INV_SRC1_ALPHA,
	};
	
	enum BLEND_OP {
		BO_ADD,
		BO_SUB,
		BO_REV_SUB,
		BO_MIN,
		BO_MAX,
	};

	enum TARGET_WRITE_ENABLE {
		TWE_NONE		= 0,		// no channels will be written too
		TWE_RED 		= BIT(0),	// red will be written too
		TWE_GREEN 		= BIT(1),	// green will be written too
		TWE_BLUE 		= BIT(2),	// blue will be written too
		TWE_ALPHA 		= BIT(3),	// alpha will be written too
		TWE_COLOUR		= TWE_RED | TWE_GREEN | TWE_BLUE,
		TWE_ALL			= TWE_RED | TWE_GREEN | TWE_BLUE | TWE_ALPHA,
	};
	
	enum LOGIC_OP {
		LO_CLEAR,
		LO_SET,
		LO_COPY,
		LO_COPY_INVERTED,
		LO_NOOP,
		LO_INVERT,
		LO_AND,
		LO_NAND,
		LO_OR,
		LO_NOR,
		LO_XOR,
		LO_EQUIV,
		LO_AND_REVERSE,
		LO_AND_INVERTED,
		LO_OR_REVERSE,
		LO_OR_INVERTED,
	};


	enum FILTER_MODE {
		FM_MIN_MAG_MIP_POINT,
		FM_MIN_MAG_POINT_MIP_LINEAR,
		FM_MIN_POINT_MAG_LINEAR_MIP_POINT,
		FM_MIN_POINT_MAG_MIP_LINEAR,
		FM_MIN_LINEAR_MAG_MIP_POINT,
		FM_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
		FM_MIN_MAG_LINEAR_MIP_POINT,
		FM_MIN_MAG_MIP_LINEAR,
		FM_ANISOTROPIC,
		FM_COMPARISON_MIN_MAG_MIP_POINT,
		FM_COMPARISON_MIN_MAG_POINT_MIP_LINEAR,
		FM_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT,
		FM_COMPARISON_MIN_POINT_MAG_MIP_LINEAR,
		FM_COMPARISON_MIN_LINEAR_MAG_MIP_POINT,
		FM_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
		FM_COMPARISON_MIN_MAG_LINEAR_MIP_POINT,
		FM_COMPARISON_MIN_MAG_MIP_LINEAR,
		FM_COMPARISON_ANISOTROPIC,
	};

	enum ADDRESS_MODE {
		AM_WRAP,
		AM_MIRROR,
		AM_CLAMP,
		AM_BORDER,
		AM_MIRROR_ONCE,
	};

	enum COMPARE_FUNC {
		CF_NEVER,
		CF_LESS,
		CF_EQUAL,
		CF_LESS_EQUAL,
		CF_GREATER,
		CF_NOT_EQUAL,
		CF_GREATER_EQUAL,
		CF_ALWAYS 
	};

	enum STENCIL_OP {
		SO_KEEP,
		SO_ZERO,
		ZO_REPLACE,
		SO_INC_SAT,
		SO_DEC_SAT,
		SO_INVERT,
		SO_INC,
		SO_DEC,
	};

	enum FILL_MODE {
		FIM_LINE,
		FIM_FILL
	};

	enum CULL_MODE {
		CUM_NONE,
		CUM_FRONT,
		CUM_BACK,
	};

}
#endif