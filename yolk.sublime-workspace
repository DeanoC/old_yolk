{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"CVN_M",
				"CVN_MATERIAL_INDEX"
			],
			[
				"en",
				"EnemyThingComponent"
			],
			[
				"Gen",
				"GenericMarkerVector"
			],
			[
				"wo",
				"worldTrans"
			],
			[
				"Text",
				"TextureHandle"
			],
			[
				"Re",
				"RenderTargetStates"
			],
			[
				"D3D11_DEP",
				"D3D11_DEPTH_WRITE_MAKE_ALL"
			],
			[
				"de",
				"DepthStencilState"
			],
			[
				"De",
				"DepthStencilState"
			],
			[
				"D3D11_",
				"D3D11_FILL_LINE"
			],
			[
				"inter",
				"internalPreCreate"
			],
			[
				"Wo",
				"WobFileHeader"
			],
			[
				"Sampler",
				"SamplerStates"
			],
			[
				"T",
				"TWE_ALPHA"
			],
			[
				"TW",
				"TWE_RED"
			],
			[
				"MAX_",
				"MAX_RENDER_TARGETS"
			],
			[
				"der",
				"derivedOnly"
			],
			[
				"rende",
				"renderThreadId"
			],
			[
				"Thr",
				"thread_id"
			],
			[
				"ren",
				"renderLoaderImpl"
			],
			[
				"loaderThrea",
				"loaderThreadId"
			],
			[
				"this",
				"this_thread"
			],
			[
				"ac",
				"acquirePumps"
			],
			[
				"internal",
				"internalPumpAcquirePump"
			],
			[
				"pu",
				"push_back"
			],
			[
				"Ac",
				"AcquirePumpCallback"
			],
			[
				"C",
				"CreationStruct"
			],
			[
				"Te",
				"TextureAtlas"
			],
			[
				"in",
				"internalLoad"
			],
			[
				"sh",
				"shared_ptr"
			],
			[
				"Res",
				"ResourceLoader"
			],
			[
				"USE_",
				"USE_DX11"
			],
			[
				"Get",
				"GetBufferPointer"
			],
			[
				"tmp",
				"tmpFragments"
			],
			[
				"out",
				"outsrc"
			],
			[
				"hea",
				"headerStack"
			],
			[
				"ref",
				"referenceTex"
			],
			[
				"pre",
				"prefillPitch"
			],
			[
				"samp",
				"sampleCount"
			],
			[
				"pref",
				"prefillData"
			],
			[
				"view",
				"viewType"
			],
			[
				"GTF_DEPTH",
				"GTF_DEPTH_COMPONENT32F"
			],
			[
				"mip",
				"mipLevels"
			],
			[
				"sl",
				"slices"
			],
			[
				"CPU",
				"CPUAccessFlags"
			],
			[
				"RESOU",
				"RESOURCE_CREATION_FLAGS"
			],
			[
				"sam",
				"sampleCount"
			],
			[
				"D3D11_CP",
				"D3D11_CPU_ACCESS_WRITE"
			],
			[
				"cpu",
				"cpuAccess"
			],
			[
				"D3DD",
				"D3D11_USAGE_DYNAMIC"
			],
			[
				"D3",
				"D3D11_MAP_WRITE_NO_OVERWRITE"
			],
			[
				"D3D11",
				"D3D11_MAP_WRITE"
			],
			[
				"render",
				"renderer"
			],
			[
				"START_F",
				"START_FLAGS"
			],
			[
				"Scre",
				"ScreenPtr"
			],
			[
				"SCRF_",
				"SCRF_DEPTH"
			],
			[
				"GL_",
				"GL_BGRA"
			],
			[
				"GL_M",
				"GL_MAP_READ_BIT"
			],
			[
				"blo",
				"blockHandles"
			],
			[
				"cu",
				"curWinHeight"
			],
			[
				"sc",
				"scrHeight"
			],
			[
				"scr",
				"scrWidth"
			],
			[
				"debug",
				"debugCam"
			],
			[
				"back",
				"backHeight"
			],
			[
				"s_new",
				"s_newWidth"
			],
			[
				"cur",
				"curWinWidth"
			],
			[
				"s_",
				"s_winHeight"
			],
			[
				"alr",
				"alreadyAcquiring"
			],
			[
				"uint",
				"uint32_t"
			],
			[
				"qui",
				"quitFlag"
			],
			[
				"ex",
				"execEngine"
			],
			[
				"COR_",
				"CORE_ASSERT"
			],
			[
				"an",
				"anyValidLeft"
			],
			[
				"Vertex",
				"VertexIndex"
			],
			[
				"m_p",
				"m_pointRep"
			],
			[
				"lightWave",
				"lightWaveScene2MeshMod"
			],
			[
				"res",
				"resourceLoaderIo"
			],
			[
				"RE",
				"ResourceLoaderImpl"
			],
			[
				"key",
				"Keyboard"
			],
			[
				"F",
				"FatalX11"
			],
			[
				"pO",
				"pOutFilename"
			],
			[
				"Mes",
				"MeshCreateParams"
			],
			[
				"TypedResourceHandle",
				"ResourceHandleBase"
			],
			[
				"Tex",
				"TextResourceHandlePtr"
			],
			[
				"trus",
				"trustedAddrToHandle"
			],
			[
				"unt",
				"untrustedThread"
			],
			[
				"un",
				"untrustedThread"
			],
			[
				"Render",
				"RenderContext"
			],
			[
				"x11",
				"x11Window"
			],
			[
				"tv_",
				"tv_sec"
			],
			[
				"stackS",
				"stackStart"
			],
			[
				"Tag",
				"TargetName"
			],
			[
				"VM",
				"VmAlloc"
			],
			[
				"Target",
				"TargetName"
			],
			[
				"thu",
				"thunkSegSize"
			],
			[
				"uin",
				"uint32_t"
			],
			[
				"encodeFuncWith",
				"encodeFuncWithParam"
			],
			[
				"enc",
				"encodeFuncWithStart"
			],
			[
				"th",
				"threadCtx"
			],
			[
				"g_",
				"g_ThreadIdx"
			],
			[
				"thunk",
				"thunkCodeSize"
			],
			[
				"trustedS",
				"trustedSize"
			],
			[
				"sta",
				"stackStart"
			],
			[
				"bot",
				"botStack"
			],
			[
				"yorkS",
				"yorkStackSize"
			],
			[
				"MEM",
				"MEM_COMMIT"
			],
			[
				"alloc",
				"allocPagesWithFlags"
			],
			[
				"yo",
				"yorkSandboxMem"
			],
			[
				"Pro",
				"PROT_EXEC"
			],
			[
				"win",
				"winSettings"
			],
			[
				"hint",
				"hintOut"
			],
			[
				"nu",
				"numBytes"
			],
			[
				"map",
				"mapFlags"
			],
			[
				"mem",
				"membase"
			],
			[
				"Memo",
				"MemoryBuffer"
			],
			[
				"Free",
				"FreeListNode"
			],
			[
				"rodata",
				"rodata_start"
			],
			[
				"BitC",
				"BitCoder	"
			],
			[
				"BitCoder",
				"BitCoderEnvironment	"
			],
			[
				"getRaw",
				"getRawElfSize"
			],
			[
				"MC",
				"MCContext"
			],
			[
				"theTe",
				"theTriple	llvm::Triple"
			],
			[
				"l",
				"llvm"
			],
			[
				"pr",
				"pragma arguments	"
			],
			[
				"load",
				"loadBitCode(Core::InOutInterface &inny)	int *"
			],
			[
				"version_",
				"version_rev"
			],
			[
				"ver",
				"version_minor"
			],
			[
				"version",
				"version_major"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/libs/gui/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 96,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/bdwgc/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 8681,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/Artminer/Documents/projects/wierd/source/core/standard.h",
			"settings":
			{
				"buffer_size": 22022,
				"line_ending": "Windows"
			}
		},
		{
			"file": "yolk_setup.cmake",
			"settings":
			{
				"buffer_size": 3643,
				"line_ending": "Windows"
			}
		},
		{
			"file": "submodules/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 256,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 776,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/core/buildconfig.h.in",
			"settings":
			{
				"buffer_size": 473,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/core/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 1749,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/gui/swfruntime/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 728,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/gui/swfruntime/SwfPlayer.h",
			"settings":
			{
				"buffer_size": 3077,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/gui/swfruntime/SwfPlayer.cpp",
			"settings":
			{
				"buffer_size": 5357,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/scene/resourceloader.cpp",
			"settings":
			{
				"buffer_size": 11380,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/scene/resourceloader.h",
			"settings":
			{
				"buffer_size": 3377,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/scene/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 1348,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/zlib/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 5369,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/jpeg/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 806,
				"line_ending": "Windows",
				"name": "CMakeLists.txt"
			}
		},
		{
			"file": "src/libs/core/core.h",
			"settings":
			{
				"buffer_size": 2863,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/core/core.cpp",
			"settings":
			{
				"buffer_size": 4056,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/libs/bdwgc/include/gc.h",
			"settings":
			{
				"buffer_size": 93368,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 15783 files for \"GC_register_my_thread\" (case sensitive)\n\nC:\\Users\\Artminer\\Documents\\Visual Studio 2012\\Projects\\yolk\\src\\libs\\bdwgc\\ChangeLog:\n  178  * Fix GC_init[_lib_bounds] and GC_get_main_stack_base for malloc redirection.\n  179  * Fix GC_push_all/selected boundaries check.\n  180: * Fix GC_register_my_thread marking thread as detached (Cygwin/pthreads-w32).\n  181  * Fix GC_remove_all_threads_but_me to cleanup thread-specific data storage.\n  182  * Fix GC_restart_handler to preserve errno if needed.\n  ...\n  267  pthread_stop_world.h.\n  268  * win32_threads.c (GC_write_fault_handler): Remove prototype.\n  269: * win32_threads.c (GC_register_my_thread_inner): Call\n  270  GC_set_write_fault_handler instead of SetUnhandledExceptionFilter\n  271  (only if MPROTECT_VDB).\n  ...\n  363  * pthread_support.c (pthread_join): Add assertion (check thread is\n  364  finished).\n  365: * pthread_support.c (GC_register_my_thread): Don't detach the\n  366  thread if invoked from the thread destructor.\n  367: * win32_threads.c (GC_register_my_thread): Likewise.\n  368  * win32_threads.c (GC_unregister_my_thread): Don't delete the\n  369  thread (just set FINISHED) if the thread is not detached (only if\n  ...\n  387  if GC_EXPLICIT_SIGNALS_UNBLOCK).\n  388  * pthread_support.c (GC_unblock_gc_signals): New prototype.\n  389: * pthread_support.c (GC_register_my_thread_inner,\n  390: GC_register_my_thread): Call GC_unblock_gc_signals (only if\n  391  GC_EXPLICIT_SIGNALS_UNBLOCK); add comment.\n  392  * include/private/gcconfig.h (GC_EXPLICIT_SIGNALS_UNBLOCK): New\n  ...\n  450  * pthread_support.c (GC_record_stack_base): New inline function.\n  451  * win32_threads.c (GC_record_stack_base): Likewise.\n  452: * pthread_support.c (GC_register_my_thread_inner): Invoke\n  453  GC_record_stack_base.\n  454: * win32_threads.c (GC_register_my_thread_inner): Likewise.\n  455: * pthread_support.c (GC_register_my_thread): If thread is FINISHED\n  456  then call GC_record_stack_base, clear FINISHED, initialize\n  457  thread-local list and return success.\n  458: * win32_threads.c (GC_register_my_thread): Likewise.\n  459: * include/gc.h (GC_register_my_thread): Update documentation.\n  460  * include/private/thread_local_alloc.h (GC_thread_key): Likewise.\n  461  \n  ...\n  479  * pthread_support.c (GC_unregister_my_thread,\n  480  GC_thread_exit_proc): Use GC_unregister_my_thread_inner.\n  481: * win32_threads.c (GC_register_my_thread, GC_unregister_my_thread,\n  482  GC_do_blocking_inner): Rename \"t\" local variable to \"thread_id\".\n  483  * win32_threads.c (GC_wait_marker, GC_notify_all_marker): Rename\n  ...\n  489  * pthread_support.c (GC_unregister_my_thread): Add debug output.\n  490  * win32_threads.c (GC_unregister_my_thread): Likewise.\n  491: * pthread_support.c (GC_register_my_thread,\n  492  GC_start_rtn_prepare_thread): Rename \"my_pthread\" local variable\n  493  to \"self\".\n  ...\n  501  * include/private/gc_priv.h (GC_I_HIDE_POINTERS): Likewise.\n  502  \n  503: * include/gc.h (GC_register_my_thread): Refine the comment.\n  504  \n  505  * include/gc_inline.h (GC_MALLOC_WORDS, GC_CONS): Add missing\n  ...\n  917  * win32_threads.c (DEBUG_CYGWIN_THREADS, DEBUG_WIN32_PTHREADS,\n  918  DEBUG_WIN32_THREADS): Remove.\n  919: * win32_threads.c (GC_register_my_thread_inner,\n  920  GC_win32_start_inner): Use GC_log_printf instead of GC_printf\n  921  inside \"if (GC_print_stats)\" branch.\n  ...\n  965  * pthread_stop_world.c (GC_print_sig_mask, GC_push_all_stacks,\n  966  GC_stop_world, GC_stop_init): Likewise.\n  967: * pthread_support.c (GC_thr_init, GC_register_my_thread_inner,\n  968  GC_start_routine): Likewise.\n  969: * win32_threads.c (GC_register_my_thread_inner,\n  970  GC_push_all_stacks, GC_win32_start_inner, GC_pthread_join,\n  971  GC_pthread_start_inner): Likewise.\n  ...\n 1461  PROTECT, GC_write_fault_handler, GC_mprotect_thread): Likewise.\n 1462  * pthread_stop_world.c (GC_start_world): Likewise.\n 1463: * win32_threads.c (GC_register_my_thread_inner): Likewise.\n 1464  * os_dep.c (GC_get_main_stack_base, GC_register_data_segments,\n 1465  GC_dirty_init): Remove redundant print of an error message before\n ....\n 1580  * darwin_stop_world.c (GC_push_all_stacks): Fix \"my_task\" local\n 1581  variable initialization (always call current_task()).\n 1582: * pthread_support.c (GC_thr_init, GC_register_my_thread_inner):\n 1583  Don't set thread's stop_info.stack_ptr value for Darwin.\n 1584  * include/private/darwin_stop_world.h (thread_stop_info): Update\n ....\n 1656  remove commented out GC_push_one statements.\n 1657  * pthread_support.c (GC_thr_init, GC_do_blocking_inner,\n 1658: GC_call_with_gc_active, GC_register_my_thread_inner): Initialize\n 1659  stack_ptr field for all platforms.\n 1660  * pthread_support.c (GC_call_with_gc_active): Initialize\n ....\n 1700  * include/gc.h (GC_parallel, GC_get_parallel,\n 1701  GC_get_suspend_signal, GC_allow_register_threads,\n 1702: GC_register_my_thread, GC_unregister_my_thread): Define only if\n 1703  GC_THREADS.\n 1704  * include/gc.h (GC_get_heap_size): Fix a typo in a comment.\n ....\n 2049  GC_wait_for_gc_completion, GC_init_parallel, GC_do_blocking_inner,\n 2050  GC_call_with_gc_active, GC_unregister_my_thread, pthread_join,\n 2051: pthread_detach, GC_register_my_thread, GC_inner_start_routine,\n 2052  pthread_create): Likewise.\n 2053  * reclaim.c (GC_print_all_errors): Likewise.\n 2054: * win32_threads.c (GC_is_thread_tsd_valid, GC_register_my_thread,\n 2055  GC_unregister_my_thread, GC_do_blocking_inner,\n 2056  GC_call_with_gc_active, GC_lookup_pthread, GC_pthread_join,\n ....\n 2089  VC++ compilers.\n 2090  \n 2091: * win32_threads.c (GC_register_my_thread_inner,\n 2092  GC_pthread_start_inner): Undo the previous commit changes for\n 2093  the thread flags and DETACHED state (since the state is only\n ....\n 2103  * tests/test.c (check_heap_stats): Test the main thread\n 2104  unregistering (only if THREADS).\n 2105: * win32_threads.c (GC_register_my_thread_inner): Set flags to\n 2106  DETACHED (only if GC_PTHREADS).\n 2107  * win32_threads.c (GC_unregister_my_thread): Add FIXME (for\n ....\n 2889  * typd_mlc.c (GC_push_typed_structures_proc): Likewise.\n 2890  * win32_threads.c (GC_win32_dll_threads,\n 2891: GC_register_my_thread_inner, GC_lookup_pthread, GC_get_stack_min,\n 2892  GC_waitForSingleObjectInfinite): Likewise.\n 2893  * darwin_stop_world.c (GC_use_mach_handler_thread,\n ....\n 3030  and GC_gcollect()).\n 3031  \n 3032: * include/gc.h (GC_allow_register_threads, GC_register_my_thread,\n 3033  GC_unregister_my_thread, GC_malloc_many): Refine the comment.\n 3034  * include/gc.h (GC_malloc_many, GC_NEXT): Declare unconditionally\n ....\n 3921  for WinCE (since thread Id is used as a \"real\" thread handle).\n 3922  * win32_threads.c (THREAD_HANDLE): New macro.\n 3923: * win32_threads.c (GC_register_my_thread_inner): Don't recognize\n 3924  DONT_IMPORT_GETCURTHREAD anymore; don't record thread handle on\n 3925  WinCE.\n ....\n 4108  GC_debug_gcj_malloc, GC_gcj_malloc_ignore_off_page): Likewise.\n 4109  * include/gc.h (GC_try_to_collect): Update the comment.\n 4110: * include/gc.h (GC_size, GC_register_my_thread): Add const\n 4111  qualifier for the argument referent.\n 4112  * misc.c (GC_size): Likewise.\n 4113: * pthread_support.c (GC_register_my_thread_inner,\n 4114: GC_register_my_thread): Likewise.\n 4115: * win32_threads.c (GC_register_my_thread_inner,\n 4116: GC_register_my_thread): Likewise.\n 4117  * include/gc.h (GC_INIT_CONF_ROOTS): New macro for internal use\n 4118  (define instead of GC_INIT() for Cygwin and AIX).\n ....\n 4272  * Makefile.direct (GC_NO_DLLMAIN, DONT_IMPORT_GETCURTHREAD): Add\n 4273  the comments for.\n 4274: * win32_threads.c (GC_register_my_thread_inner): Recognize\n 4275  DONT_IMPORT_GETCURTHREAD macro.\n 4276  * win32_threads.c: Recognize GC_NO_DLLMAIN macro (to exclude\n ....\n 4281  ABORT message.\n 4282  * win32_threads.c (GC_use_DllMain,\n 4283: GC_started_thread_while_stopped, GC_register_my_thread_inner,\n 4284  GC_lookup_thread_inner, GC_delete_gc_thread,\n 4285  GC_allow_register_threads, GC_lookup_pthread,\n ....\n 4462  * win32_threads.c (GC_allow_register_threads): Likewise.\n 4463  * include/gc.h (GC_allow_register_threads): New API prototype.\n 4464: * include/gc.h (GC_register_my_thread, GC_unregister_my_thread):\n 4465  Update the comments.\n 4466: * pthread_support.c (GC_register_my_thread): Check the collector\n 4467  is in the multi-threaded mode.\n 4468: * win32_threads.c (GC_register_my_thread): Likewise.\n 4469  \n 4470  * finalize.c (GC_finalize_all): Always call GC_invoke_finalizers\n ....\n 4518  \n 4519  * pthread_support.c (GC_inner_start_routine): Don't release the\n 4520: GC lock between GC_register_my_thread_inner() and\n 4521  GC_init_thread_local() calls (post the \"registered\" even after\n 4522  calling GC_init_thread_local()).\n 4523: * win32_threads.c (GC_register_my_thread, GC_unregister_my_thread):\n 4524  Use GC_lookup_thread_inner() instead of GC_lookup_thread() and\n 4525  acquire the GC lock only once.\n 4526: * win32_threads.c (GC_thr_init): Call GC_register_my_thread_inner()\n 4527: directly instead of GC_register_my_thread() since I_HOLD_LOCK\n 4528  and our (main) thread is not registered yet (add assertion for it).\n 4529  * win32_threads.c (GC_init_parallel): Call GC_lookup_thread_inner()\n ....\n 4607  * win32_threads.c (GC_Thread_Rep): Add backing_store_end and\n 4608  backing_store_ptr fields for IA64 support.\n 4609: * win32_threads.c (GC_register_my_thread_inner): Set\n 4610  backing_store_end field to reg_base value for IA64 (same as in\n 4611  pthread_support.c).\n ....\n 4722  * pthread_support.c (GC_thr_init): Treat incorrect \"GC_markers\"\n 4723  values as one.\n 4724: * pthread_support.c (GC_register_my_thread_inner): Add a check for\n 4725  \"stack_end\" is non-NULL (the same as in win32_threads.c).\n 4726  * pthread_support.c (pthread_create): Call GC_oom_fn before giving up\n ....\n 5039  \n 5040  * doc/gcinterface.html: Improve REDIRECT_MALLOC documentation.\n 5041: * include/gc.h (GC_register_my_thread): Improve comment.\n 5042  \n 5043  * Makefile.direct: Add comment for -DCHECKSUMS.\n ....\n 5163  (GC_header_cache_miss): Always blacklist pointers for free\n 5164  hblks.  Add assertion and comment.\n 5165: * pthread_support.c (GC_register_my_thread): Fix #if indentation.\n 5166  * include/private/gc_hdrs.h: USE_HDR_CACHE is no longer tested.\n 5167  Delete it.\n ....\n 5225  implementations.  (GC_get_stack_base): Add pthread_attr_destroy\n 5226  call.  No longer set GC_old_bus_handler in DARWIN workaround.\n 5227: * pthread_support.c: GC_register_my_thread must also\n 5228  call GC_init_thread_local.\n 5229  \n ....\n 5307  defined.  (GC_call_with_stack_base): Add GC_API.\n 5308  * os_dep.c (GC_get_stack_base): Add GC_API.\n 5309: * win32_threads.c: (GC_register_my_thread, GC_unregister_my_thread):\n 5310  Add GC_API.\n 5311  * include/gc.h: Add GC_API annotations.\n ....\n 5884  Untested.\n 5885  * Use thread-local allocation code by default.\n 5886: * Added GC_register_my_thread and friends for Posix and win32.\n 5887  * Patch for GWW_VDB from Ben Hutchings.\n 5888  * Removed explicit THREAD_LOCAL_ALLOC tests, since that now always\n\nC:\\Users\\Artminer\\Documents\\Visual Studio 2012\\Projects\\yolk\\src\\libs\\bdwgc\\pthread_support.c:\n 1471      me -> stack_end = sb -> mem_base;\n 1472      if (me -> stack_end == NULL)\n 1473:       ABORT(\"Bad stack base in GC_register_my_thread\");\n 1474  #   ifdef IA64\n 1475        me -> backing_store_end = sb -> reg_base;\n ....\n 1477  }\n 1478  \n 1479: STATIC GC_thread GC_register_my_thread_inner(const struct GC_stack_base *sb,\n 1480                                               pthread_t my_pthread)\n 1481  {\n ....\n 1507  }\n 1508  \n 1509: GC_API int GC_CALL GC_register_my_thread(const struct GC_stack_base *sb)\n 1510  {\n 1511      pthread_t self = pthread_self();\n ....\n 1519      me = GC_lookup_thread(self);\n 1520      if (0 == me) {\n 1521:         me = GC_register_my_thread_inner(sb, self);\n 1522          me -> flags |= DETACHED;\n 1523            /* Treat as detached, since we do not need to worry about     */\n ....\n 1574  #   endif\n 1575      LOCK();\n 1576:     me = GC_register_my_thread_inner(sb, self);\n 1577      me -> flags = si -> flags;\n 1578  #   if defined(THREAD_LOCAL_ALLOC)\n\nC:\\Users\\Artminer\\Documents\\Visual Studio 2012\\Projects\\yolk\\src\\libs\\bdwgc\\win32_threads.c:\n  371  # endif\n  372    if (me -> stack_base == NULL)\n  373:     ABORT(\"Bad stack base in GC_register_my_thread\");\n  374  }\n  375  \n  ...\n  379  /* added.  If GC_win32_dll_threads is not set, we already hold the      */\n  380  /* allocation lock except possibly during single-threaded startup code. */\n  381: STATIC GC_thread GC_register_my_thread_inner(const struct GC_stack_base *sb,\n  382                                               DWORD thread_id)\n  383  {\n  ...\n  726  }\n  727  \n  728: GC_API int GC_CALL GC_register_my_thread(const struct GC_stack_base *sb)\n  729  {\n  730    GC_thread me;\n  ...\n  740    if (me == 0) {\n  741  #   ifdef GC_PTHREADS\n  742:       me = GC_register_my_thread_inner(sb, thread_id);\n  743        me -> flags |= DETACHED;\n  744            /* Treat as detached, since we do not need to worry about     */\n  745            /* pointer results.                                           */\n  746  #   else\n  747:       GC_register_my_thread_inner(sb, thread_id);\n  748  #   endif\n  749      UNLOCK();\n  ...\n 2156      LPVOID param = ((thread_args *)arg)->param;\n 2157  \n 2158:     GC_register_my_thread(sb); /* This waits for an in-progress GC.     */\n 2159  \n 2160  #   ifdef DEBUG_THREADS\n ....\n 2486  \n 2487    GC_ASSERT(0 == GC_lookup_thread_inner(GC_main_thread));\n 2488:   GC_register_my_thread_inner(&sb, GC_main_thread);\n 2489  \n 2490  # ifdef PARALLEL_MARK\n ....\n 2612      /* We register the thread here instead of in the parent, so that    */\n 2613      /* we don't need to hold the allocation lock during pthread_create. */\n 2614:     me = GC_register_my_thread_inner(sb, thread_id);\n 2615      SET_PTHREAD_MAP_CACHE(pthread_id, thread_id);\n 2616      me -> pthread_id = pthread_id;\n ....\n 2751                          GC_get_stack_base(&sb);\n 2752              GC_ASSERT(sb_result == GC_SUCCESS);\n 2753:             GC_register_my_thread_inner(&sb, thread_id);\n 2754  #         endif\n 2755          } /* o.w. we already did it during GC_thr_init, called by GC_init */\n\nC:\\Users\\Artminer\\Documents\\Visual Studio 2012\\Projects\\yolk\\src\\libs\\bdwgc\\include\\gc.h:\n  310                                  /* should use GC_get_stack_base(),      */\n  311                                  /* GC_call_with_gc_active() and         */\n  312:                                 /* GC_register_my_thread() instead.     */\n  313  \n  314  GC_API GC_ATTR_DEPRECATED int GC_dont_precollect;\n  ...\n 1160    GC_API int GC_CALL GC_get_thr_restart_signal(void);\n 1161  \n 1162:   /* Explicitly enable GC_register_my_thread() invocation.              */\n 1163    /* Done implicitly if a GC thread-creation function is called (or     */\n 1164    /* implicit thread registration is activated).  Otherwise, it must    */\n ....\n 1188    /* created by third-party libraries.                                  */\n 1189    /* A manually registered thread requires manual unregistering.        */\n 1190:   GC_API int GC_CALL GC_register_my_thread(const struct GC_stack_base *)\n 1191                                                          GC_ATTR_NONNULL(1);\n 1192  \n ....\n 1196  \n 1197    /* Unregister the current thread.  Only an explicitly registered      */\n 1198:   /* thread (i.e. for which GC_register_my_thread() returns GC_SUCCESS) */\n 1199    /* is allowed (and required) to call this function.  (As a special    */\n 1200    /* exception, it is also allowed to once unregister the main thread.) */\n ....\n 1401  \n 1402      /* All threads must be created using GC_CreateThread or             */\n 1403:     /* GC_beginthreadex, or must explicitly call GC_register_my_thread  */\n 1404      /* (and call GC_unregister_my_thread before thread termination), so */\n 1405      /* that they will be recorded in the thread table.  For backward    */\n\nC:\\Users\\Artminer\\Documents\\Visual Studio 2012\\Projects\\yolk\\src\\libs\\bdwgc\\tests\\threadkey_test.c:\n   51  void * GC_CALLBACK on_thread_exit_inner (struct GC_stack_base * sb, void * arg)\n   52  {\n   53:   int res = GC_register_my_thread (sb);\n   54    pthread_t t;\n   55    int creation_res;     /* Used to suppress a warning about     */\n\n69 matches across 5 files\n",
			"settings":
			{
				"buffer_size": 16417,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/libs/bdwgc/win32_threads.c",
			"settings":
			{
				"buffer_size": 102117,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/libs/bdwgc/include/gc_config_macros.h",
			"settings":
			{
				"buffer_size": 13076,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Discover Packages"
			],
			[
				"",
				"Bookmarks: Clear All"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 146.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfBasePath.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfBasePath.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfDisplayObjectFrameItem.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfDisplayObjectFrameItem.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfFrameItem.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfFrameItem.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfGpuLinePath.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfGpuLinePath.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfGpuPath.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfGpuPath.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfGradientTextureManager.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfGradientTextureManager.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfMovieClip.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfMovieClip.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfPlayer.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfPlayer.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRFS_GLTnL_iPhone.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRFS_GLTnL_iPhone.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeBitmap.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeBitmap.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeBuilder.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeBuilder.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeCharacter.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeDynamicText.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeDynamicText.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeFillStyle.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeFont.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeShape.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeShape.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeText.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeText.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeUtils.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeUtils.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/codegen/AsVM.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/codegen/AsVM.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/codegen/AsFunction.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/codegen/AsFunction.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/codegen/AsFuncInstruction.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/autogen/AsObjectFunction.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/autogen/AsObjectFactory.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/autogen/AsObjectFactory.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/autogen/AsObject.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/autogen/AsObject.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/autogen/AsClass.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/autogen/AsClass.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/autogen/AsAgRuntime.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/autogen/AsAgRuntime.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/aslib/AsDate.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/aslib/AsArray.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfParser.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/parser.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/parser.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfParser.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfStream.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfStream.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeFillStyle.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfRuntimeFont.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/codegen/AsFuncInstruction.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/CMakeLists.txt",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/swfruntime.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/swfruntime.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/CMakeLists.txt",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/scene/physicsensor.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/scene/physicsensor.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/scene/physical.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/scene/physicsworld.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/scene/physicsworld.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/apps/vtdfh/player.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/CMakeLists.txt",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/CMakeLists.txt",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfRect.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfRect.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfRGB.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfRGB.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfShape.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfShape.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfShapeRecord.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfShapeRecord.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfSprite.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfTag.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfText.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfText.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfTextRecord.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfTextRecord.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfVec2Twip.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/SwfCharacter.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/AsByteCode.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/LLVM/AsObject.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/LLVM/AsObject.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/LLVM/AsScriptLLVM.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/LLVM/AsScriptLLVM.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/LLVM/AsUTF8.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/LLVM/AsVM.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfruntime/ActionScript/LLVM/AsVM.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/EndianBitConverter.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfActionByteCode.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfBitmap.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfCharacter.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfClipActions.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfClipActions.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfColourTransform.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfDictionary.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfDisplayObject.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfDisplayObject.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfFillStyle.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfFont.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfFont.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfFrame.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfGradient.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfGradient.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfImage.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfImage.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfLineStyle.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfLineStyle.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfMatrix.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfMatrix.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfMorphShape.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gui/swfparser/SwfMorphShape.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/scene/cylindercolshape.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/localworld/properties.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/meshimport/LWVtdfhItemCustomObj2SceneNode.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/lightwaveloader/LWSceneLoader.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/lightwaveloader/LWSceneLoader.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/lightwaveloader/vtdfhItemCustomObjPlugin.cpp",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/lightwaveloader/vtdfhItemCustomObjPlugin.h",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/gl/programs/fragments/fs_alloc32.glsl",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/scene/programs/programs/vttransparent.hlsl",
		"/C/Users/Artminer/Documents/Visual Studio 2012/Projects/yolk/src/libs/scene/programs/shaders/fs_constant1.hlsl"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 105.0,
		"where_history":
		[
			"",
			"Z:\\Projects\\Cyberspace\\yolk_repo\\submodules\\native_client\\src\\native_client\\src",
			"",
			"Z:\\Projects\\Cyberspace\\yolk_repo\\submodules\\native_client\\src\\native_client",
			"Z:\\Projects\\Cyberspace\\yolk_repo\\submodules\\llvm",
			"Z:\\Projects\\Cyberspace\\yolk_repo\\submodules\\native_client\\src\\native_client\\src",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"GC_register_my_thread",
			"#include \"pch.h\"",
			"SwfParser",
			"Zombie House Studios",
			"2008 Zombie House Studios",
			"Enemy",
			"{\n",
			"debug",
			"debugf",
			"vtdfh.h",
			"RasteriserState",
			"internalPreCreate",
			"internalLoad",
			"CreationInfo",
			"PreCreateStruct",
			"LoadStruct",
			"GL_",
			"YOLK_SCENE_PROGRAM_MAN_H_",
			"TextureCtor",
			"swapChain",
			"YOLK_GL_VALIDATE_PRG_OFFSETS",
			"Gl::MAX_PROGRAM_TYPE",
			"DECLARE_FRAGMENT",
			";",
			":",
			"GL_",
			"RENDER_BACKEND",
			"VaoElement",
			"CF_STATIC",
			"CONSTANT_FREQ_BLOCKS",
			"WIERD_GL_GET_SIZEOF_PRG_VAR",
			"WIERD_GL_GET_OFFSET_IN_BLOCK",
			"WIERD_GL_VALIDATE_PRG_OFFSETS",
			"WIERD_GL_GET_OFFSET_IN_BLOCK",
			"Gl",
			"GLEWAPIENTRY",
			"add_custom_command",
			"obj",
			"asm",
			"obj",
			"asm",
			"<?",
			"LLVM_PREPROCESSOR",
			"LLVM_ASM",
			"asm",
			"glxew",
			"glXGetProcAddressARB",
			"GL_LINEAR",
			"GL_UNIFORM_BUFFER",
			"expired",
			"LWSurfPolyTag",
			"getS",
			"LoadObjectLayer",
			"fmatrix44",
			"modelFactory",
			"Log",
			"glBindVertexArray",
			"DataBuffer",
			"DataBufferMan",
			"glBind",
			"Vao",
			"GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB",
			"pRD->resource",
			"deano@zombiehousestudios.com",
			"2010",
			"Zombie House Studios",
			"m_impl",
			"tbb_rml",
			"make_private_server",
			"glXGetVisualFromFBConfig",
			"GLXFBConfig",
			"X11/",
			"GL/gl",
			"GL/gh",
			"GL/gl",
			"glxContext",
			"uiSizeOfMainBlock",
			"m_pInterface",
			"XKeyPress",
			"setCamera",
			"Camera",
			"CameraPtr",
			"CORE_ALIGN",
			"ALIGN",
			"dynamic_pointer_cast",
			"radians",
			"degrees_to_radians",
			"GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
			"GLX_CONTEXT_MINOR_VERSION_ARB",
			"glBindFramebuffer",
			"baseName",
			"MakeBaseFilename",
			"loadCreateResource",
			"addRelocationForSymbol",
			"Expected External Symbol",
			"SceneCapturePipeline",
			"GL_NO_ERROR",
			"0x88f0",
			"OffsetEXT\nOffsetEXT",
			"OffsetEXT",
			"#",
			"VertexArrayVertexAttribOffset",
			"VertexAttribOffset",
			"VertexArrayVertexAttribOffset",
			"VertexAttribOffset",
			"VertexArrayVertexAttribOffset",
			"VertexArrayVertexAttribOffsetEXT",
			"glVertexArrayVertexAttribOffsetEXT",
			"REGISTER_SHARED_WITH_CL",
			"WobBack",
			"DT_NULL",
			"setMemoryWritable",
			"SectionRef",
			"reassignSectionAddress",
			"resolveExternalSymbols",
			"resolveRelocation",
			"createTargetMachine",
			"ST_Debug",
			"ST_Debug\"",
			"ymbolRef::ST_Debug",
			"main",
			"PLT",
			"R_X86_64_64",
			"ELF::R_X86_64_64",
			"createTargetMachine",
			"RelocModel",
			"CMModel",
			"setCodeModel"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"#include \"swfruntime.h\"",
			"Parser",
			"2012 Cloud Pixies Ltd",
			"Item",
			"DepthStencilState",
			"RenderTargetStates",
			"internalPreCreate",
			"CreationInfo",
			"PreCreateStruct",
			"GTF_",
			"YOLK_VALIDATE_PRG_OFFSETS",
			"MAX_SHADER_TYPES",
			"DECLARE_SHADER",
			":",
			";",
			"GTF_",
			"VinElement&",
			"YOLK_GL_GET_SIZEOF_PRG_VAR",
			"YOLK_GL_GET_OFFSET_IN_BLOCK",
			"YOLK_GL_VALIDATE_PRG_OFFSETS",
			"Scene",
			"Math::Matrix4x4",
			"LOG(INFO)",
			"Cloud Pixies Ltd",
			"impl",
			"dcinterface",
			"SandboxMemoryManager",
			"NaClJITMemoryManagerX",
			"${BASE_DIR}",
			"",
			"void",
			"void*"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/libs/gui/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 96,
						"regions":
						{
						},
						"selection":
						[
							[
								94,
								94
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/libs/bdwgc/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 8681,
						"regions":
						{
						},
						"selection":
						[
							[
								7591,
								7573
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4174.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/Artminer/Documents/projects/wierd/source/core/standard.h",
					"settings":
					{
						"buffer_size": 22022,
						"regions":
						{
						},
						"selection":
						[
							[
								15608,
								21620
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 16481.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "yolk_setup.cmake",
					"settings":
					{
						"buffer_size": 3643,
						"regions":
						{
						},
						"selection":
						[
							[
								750,
								750
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 69.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "submodules/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 256,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								1
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/libs/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 776,
						"regions":
						{
						},
						"selection":
						[
							[
								141,
								141
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/libs/core/buildconfig.h.in",
					"settings":
					{
						"buffer_size": 473,
						"regions":
						{
						},
						"selection":
						[
							[
								167,
								167
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/libs/core/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 1749,
						"regions":
						{
						},
						"selection":
						[
							[
								1151,
								1151
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 276.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/libs/gui/swfruntime/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 728,
						"regions":
						{
						},
						"selection":
						[
							[
								562,
								562
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/libs/gui/swfruntime/SwfPlayer.h",
					"settings":
					{
						"buffer_size": 3077,
						"regions":
						{
						},
						"selection":
						[
							[
								1122,
								1122
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 795.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/libs/gui/swfruntime/SwfPlayer.cpp",
					"settings":
					{
						"buffer_size": 5357,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/libs/scene/resourceloader.cpp",
					"settings":
					{
						"buffer_size": 11380,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5884.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/libs/scene/resourceloader.h",
					"settings":
					{
						"buffer_size": 3377,
						"regions":
						{
						},
						"selection":
						[
							[
								2957,
								2957
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 992.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/libs/scene/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 1348,
						"regions":
						{
						},
						"selection":
						[
							[
								1266,
								1266
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "src/libs/zlib/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 5369,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 414.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "src/libs/jpeg/CMakeLists.txt",
					"settings":
					{
						"buffer_size": 806,
						"regions":
						{
						},
						"selection":
						[
							[
								540,
								540
							]
						],
						"settings":
						{
							"auto_name": "CMakeLists.txt",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "src/libs/core/core.h",
					"settings":
					{
						"buffer_size": 2863,
						"regions":
						{
						},
						"selection":
						[
							[
								815,
								815
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 138.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src/libs/core/core.cpp",
					"settings":
					{
						"buffer_size": 4056,
						"regions":
						{
						},
						"selection":
						[
							[
								2138,
								2138
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1035.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "src/libs/bdwgc/include/gc.h",
					"settings":
					{
						"buffer_size": 93368,
						"regions":
						{
						},
						"selection":
						[
							[
								71091,
								71112
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 690.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 19,
					"settings":
					{
						"buffer_size": 16417,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										305,
										326
									],
									[
										651,
										672
									],
									[
										916,
										937
									],
									[
										1036,
										1057
									],
									[
										1353,
										1374
									],
									[
										1389,
										1410
									],
									[
										1735,
										1756
									],
									[
										1827,
										1848
									],
									[
										1895,
										1916
									],
									[
										2078,
										2099
									],
									[
										2135,
										2156
									],
									[
										2411,
										2432
									],
									[
										2771,
										2792
									],
									[
										2988,
										3009
									],
									[
										3248,
										3269
									],
									[
										3554,
										3575
									],
									[
										3645,
										3666
									],
									[
										3943,
										3964
									],
									[
										4305,
										4326
									],
									[
										4623,
										4644
									],
									[
										4893,
										4914
									],
									[
										5216,
										5237
									],
									[
										5399,
										5420
									],
									[
										5606,
										5627
									],
									[
										5907,
										5928
									],
									[
										6180,
										6201
									],
									[
										6445,
										6466
									],
									[
										6765,
										6786
									],
									[
										7067,
										7088
									],
									[
										7210,
										7231
									],
									[
										7246,
										7267
									],
									[
										7306,
										7327
									],
									[
										7342,
										7363
									],
									[
										7633,
										7654
									],
									[
										7890,
										7911
									],
									[
										8187,
										8208
									],
									[
										8292,
										8313
									],
									[
										8400,
										8421
									],
									[
										8622,
										8643
									],
									[
										8792,
										8813
									],
									[
										8994,
										9015
									],
									[
										9051,
										9072
									],
									[
										9393,
										9414
									],
									[
										9651,
										9672
									],
									[
										9946,
										9967
									],
									[
										10192,
										10213
									],
									[
										10500,
										10521
									],
									[
										10714,
										10735
									],
									[
										10921,
										10942
									],
									[
										11316,
										11337
									],
									[
										11465,
										11486
									],
									[
										11657,
										11678
									],
									[
										11856,
										11877
									],
									[
										12075,
										12096
									],
									[
										12378,
										12399
									],
									[
										12614,
										12635
									],
									[
										12801,
										12822
									],
									[
										12964,
										12985
									],
									[
										13239,
										13260
									],
									[
										13401,
										13422
									],
									[
										13599,
										13620
									],
									[
										13872,
										13893
									],
									[
										14150,
										14171
									],
									[
										14599,
										14620
									],
									[
										14809,
										14830
									],
									[
										15223,
										15244
									],
									[
										15497,
										15518
									],
									[
										15860,
										15881
									],
									[
										16266,
										16287
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								15502,
								15502
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 6831.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "src/libs/bdwgc/win32_threads.c",
					"settings":
					{
						"buffer_size": 102117,
						"regions":
						{
						},
						"selection":
						[
							[
								82992,
								82992
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 27586.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "src/libs/bdwgc/include/gc_config_macros.h",
					"settings":
					{
						"buffer_size": 13076,
						"regions":
						{
						},
						"selection":
						[
							[
								2025,
								2041
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 207.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 130.0
	},
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"main",
				"src/apps/convertmesh/main.cpp"
			],
			[
				"corer",
				"src/libs/core/coreresources.cpp"
			],
			[
				"elf.h",
				"submodules/nacl-llvm/llvm/include/llvm/Support/ELF.h"
			],
			[
				"dwarf",
				"submodules/nacl-llvm/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp"
			],
			[
				"dwarfde",
				"submodules/nacl-llvm/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp"
			],
			[
				"bitcodere",
				"submodules/nacl-llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp"
			],
			[
				"runtimey",
				"submodules/nacl-llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp"
			],
			[
				"",
				"submodules/nacl-llvm/llvm/lib/MC/MCELFStreamer.cpp"
			],
			[
				"runtime",
				"submodules/nacl-llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp"
			],
			[
				"platform",
				"src/libs/core/platform.h"
			],
			[
				"registr",
				"submodules/nacl-llvm/llvm/include/llvm/Support/Registry.h"
			],
			[
				"triple",
				"submodules/nacl-llvm/llvm/lib/Support/Triple.cpp"
			],
			[
				"targetreg",
				"submodules/nacl-llvm/llvm/include/llvm/Support/TargetRegistry.h"
			],
			[
				"tiple",
				"submodules/nacl-llvm/llvm/lib/Support/Triple.cpp"
			],
			[
				"targetdata",
				"submodules/nacl-llvm/llvm/include/llvm/Target/TargetData.h"
			],
			[
				"target.",
				"submodules/nacl-llvm/llvm/lib/Target/Target.cpp"
			],
			[
				"target",
				"submodules/nacl-llvm/llvm/lib/Target/Target.cpp"
			],
			[
				"triple.c",
				"submodules/nacl-llvm/llvm/lib/Support/Triple.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 309.0,
	"status_bar_visible": true
}
